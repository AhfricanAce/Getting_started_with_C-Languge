In C programming, a loop is a control structure that allows a set of instructions to be repeated multiple times.
It is a fundamental concept in programming and is used to automate repetitive tasks or iterate over a collection of data.

There are three types of loops commonly used in C: thr for loop, the while loop, and the do-while loop. 
Each type of loop has its own syntax and use cases, but they all serve the same purpose of repeating
a block of code until a certain condition is met.

# 1. The for Loop:

The for loop is the most commonly used loop in C. It consists of three parts:
initialization, condition, and increment/decrement.
The syntax of a for loop is as follows:

for (initialization; condition; increment/decrement) {
    // code to be executed repeatedly
}

The intialization part is used to initialize a counter variable, the condition part is used to specify 
the condition that must be true for the loop to continue, and the increment/decrement part is used to update 
the counter variable after each iteration.

# The while Loop:

The while loop is another type of loop in C. It repeats a block of code as long as a specified condition is true.
The syntax of a while loop is as follows:

while (condition) {
      // code to be executed repeadtedly
}

The condition is checked before each iteration, and if it evaluates to true, the code inside the loop is executed. 
If the condition evaluates to false, the loop is terminated.

# The do-while Loop:

The  do-while loop is similar tot he while loop, but with one key difference: the condition is checked afteriteration.
This means that the code inside the loop is always executed at least once, regardless of whether the condition is initially true or false.
The syntax of a do-while loop is as follows:

do {
    // code to be executed repeatedly
} while (condition);

The code inside the loop is executed first, and then the condition is checked. If the condition is true, the loop continues;
 otherwise, the loop is terminated.
